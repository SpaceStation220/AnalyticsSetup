server:
  http_listen_port: 9080
  grpc_listen_port: 0

positions:
  filename: /var/log/promtail/positions.yaml # Path inside the container
  #ignore_old_positions: true # Ignore previously saved positions when Promtail starts

clients:
  - url: http://loki:3100/loki/api/v1/push # Address of Loki service within Docker network

scrape_configs:
  - job_name: game_server_logs
    static_configs:
      - targets:
          - localhost
        labels:
          job: bandastation_local # Base label for this job
          # Corrected __path__ glob pattern for the YYYY/MM/DD/round-ID/*.log structure
          __path__: /var/log/game_logs/*/*/*/*/*.log # Path INSIDE the container

    pipeline_stages:
      # Use regex stage to extract labels from the file path
      - regex:
          # Tell the stage to parse the value associated with the 'filename' key in the extracted map
          source: 'filename'
          # Use NAMED capture groups (?P<name>...) as required by the docs.
          # Using single quotes avoids needing to double-escape backslashes.
          expression: '^/var/log/game_logs/(?P<year>\d{4})/(?P<month>\d{2})/(?P<day>\d{2})/(?P<round_id>[^/]+)/(?P<log_type>[^/]+)\.log$'

      - template:
          source: full_date # Name for the key in the extracted map holding the template output
          # *** CORRECT SYNTAX based on docs: Access keys directly ***
          template: '{{.year}}-{{.month}}-{{.day}}'

      # Stage 4: Promote desired fields from the extracted map to final Loki labels
      - labels:
          full_date: # Promote the value associated with 'full_date' from extracted map
          round_id:  # Promote 'round_id'
          log_type:  # Promote 'log_type'
          # We don't explicitly promote year/month/day here, relying on full_date